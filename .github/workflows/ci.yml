name: CI
on:
  pull_request:
  push:
    branches: [ main ]
permissions:
  contents: read
env:
  DO_TUNE: "false"
jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[s3]

      - name: DVC pull (optional)
        if: ${{ env.DVC_REMOTE }}
        env:
          DVC_REMOTE: ${{ secrets.DVC_REMOTE }}
        run: |
          echo "Using DVC remote if configured"
          dvc pull || true

      - name: DVC repro (fast)
        env:
          DO_TUNE: "false"
        run: dvc repro

      - name: Pytest
        run: pytest -q

      - name: Upload reports artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ github.sha }}
          path: |
            reports/metrics.json
            reports/plots/**
          if-no-files-found: warn

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry (if secrets present)
        if: ${{ github.ref == 'refs/heads/main' && secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract short SHA
        id: get_sha
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build (and optionally push) Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: api/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' && secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/titanic-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/titanic-api:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/titanic-api:${{ env.SHORT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

